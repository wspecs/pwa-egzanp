{"version":3,"sources":["node_modules/@webcomponents/webcomponentsjs/webcomponents-loader.js"],"names":[],"mappings":";CAUA,WACA,aA+BA,IAGA,EAHA,GAAA,EACA,EAAA,GACA,GAAA,EAGA,SAAA,IACA,OAAA,cAAA,OAAA,EACA,SAAA,cAAA,IAAA,YAAA,qBAAA,CAAA,SAAA,KAGA,SAAA,IACA,OAAA,gBAAA,eAAA,2BACA,eAAA,0BAAA,SAAA,GACA,EAAA,EACA,GACA,MAWA,SAAA,IAEA,OAAA,qBAAA,oBAAA,WACA,oBAAA,UAAA,OAAA,UAEA,GAAA,EACA,IAAA,KAAA,GAGA,SAAA,IACA,GAAA,EACA,IAAA,EAAA,EAAA,IAAA,SAAA,GACA,OAAA,aAAA,SAAA,IAAA,IAGA,OADA,EAAA,GACA,QAAA,IAAA,GAAA,KAAA,WACA,GAAA,EACA,GAAA,MACA,MAAA,SAAA,GACA,QAAA,MAAA,KAIA,OAAA,cAAA,OAAA,eAAA,GACA,OAAA,cAAA,MAAA,OAAA,cAAA,QAAA,EACA,OAAA,cAAA,QAAA,OAAA,cAAA,SAAA,SAAA,GACA,IAGA,EAAA,KAAA,GACA,GACA,MAGA,OAAA,cAAA,qBAAA,EAEA,IAAA,EAAA,0BAEA,EAAA,MACA,iBAAA,QAAA,WAAA,gBAAA,QAAA,YACA,OAAA,UAAA,OAAA,SAAA,QACA,EAAA,KAAA,MAEA,OAAA,iBAAA,OAAA,eAAA,eACA,EAAA,KAAA,MAGA,IAAA,EAAA,WAEA,IAAA,EAAA,SAAA,cAAA,YACA,KAAA,YAAA,GACA,OAAA,EAGA,KAAA,EAAA,QAAA,sBAAA,kBACA,OAAA,EAGA,IAAA,EAAA,SAAA,cAAA,YACA,EAAA,QAAA,YAAA,SAAA,cAAA,QACA,EAAA,QAAA,YAAA,GACA,IAAA,EAAA,EAAA,WAAA,GACA,OAAA,IAAA,EAAA,QAAA,WAAA,QACA,IAAA,EAAA,QAAA,WAAA,QAAA,WAAA,OAhBA,GAyBA,GAJA,OAAA,SAAA,MAAA,MAAA,OAAA,KAAA,OAAA,SAAA,IACA,EAAA,CAAA,aAGA,EAAA,OAAA,CACA,IAAA,EACA,EAAA,yBAAA,EAAA,KAAA,KAAA,MAGA,GAAA,OAAA,cAAA,KACA,EAAA,OAAA,cAAA,KAAA,MACA,CACA,IAAA,EAAA,SAAA,cAAA,gBAAA,EAAA,MAEA,EAAA,EAAA,IAAA,QAAA,EAAA,GAGA,IAAA,EAAA,SAAA,cAAA,UACA,EAAA,IAAA,EAEA,YAAA,SAAA,YAEA,EAAA,aAAA,SAAA,+CACA,SAAA,MAAA,EAAA,WACA,SAAA,iBAAA,mBAAA,KAEA,EAAA,iBAAA,OAAA,WAlGA,IACA,MAoGA,EAAA,iBAAA,QAAA,WACA,MAAA,IAAA,MAAA,iCAAA,KAEA,SAAA,KAAA,YAAA,QAIA,aAAA,SAAA,YACA,GAAA,EACA,MAGA,OAAA,iBAAA,OAAA,GACA,OAAA,iBAAA,mBAAA,WACA,OAAA,oBAAA,OAAA,GACA,OA1KA","file":"webcomponents-loader.d1f42c99.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Basic flow of the loader process\n   *\n   * There are 4 flows the loader can take when booting up\n   *\n   * - Synchronous script, no polyfills needed\n   *   - wait for `DOMContentLoaded`\n   *   - fire WCR event, as there could not be any callbacks passed to `waitFor`\n   *\n   * - Synchronous script, polyfills needed\n   *   - document.write the polyfill bundle\n   *   - wait on the `load` event of the bundle to batch Custom Element upgrades\n   *   - wait for `DOMContentLoaded`\n   *   - run callbacks passed to `waitFor`\n   *   - fire WCR event\n   *\n   * - Asynchronous script, no polyfills needed\n   *   - wait for `DOMContentLoaded`\n   *   - run callbacks passed to `waitFor`\n   *   - fire WCR event\n   *\n   * - Asynchronous script, polyfills needed\n   *   - Append the polyfill bundle script\n   *   - wait for `load` event of the bundle\n   *   - batch Custom Element Upgrades\n   *   - run callbacks pass to `waitFor`\n   *   - fire WCR event\n   */\n\n  var polyfillsLoaded = false;\n  var whenLoadedFns = [];\n  var allowUpgrades = false;\n  var flushFn;\n\n  function fireEvent() {\n    window.WebComponents.ready = true;\n    document.dispatchEvent(new CustomEvent('WebComponentsReady', { bubbles: true }));\n  }\n\n  function batchCustomElements() {\n    if (window.customElements && customElements.polyfillWrapFlushCallback) {\n      customElements.polyfillWrapFlushCallback(function (flushCallback) {\n        flushFn = flushCallback;\n        if (allowUpgrades) {\n          flushFn();\n        }\n      });\n    }\n  }\n\n  function asyncReady() {\n    batchCustomElements();\n    ready();\n  }\n\n  function ready() {\n    // bootstrap <template> elements before custom elements\n    if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {\n      HTMLTemplateElement.bootstrap(window.document);\n    }\n    polyfillsLoaded = true;\n    runWhenLoadedFns().then(fireEvent);\n  }\n\n  function runWhenLoadedFns() {\n    allowUpgrades = false;\n    var fnsMap = whenLoadedFns.map(function(fn) {\n      return fn instanceof Function ? fn() : fn;\n    });\n    whenLoadedFns = [];\n    return Promise.all(fnsMap).then(function() {\n      allowUpgrades = true;\n      flushFn && flushFn();\n    }).catch(function(err) {\n      console.error(err);\n    });\n  }\n\n  window.WebComponents = window.WebComponents || {};\n  window.WebComponents.ready = window.WebComponents.ready || false;\n  window.WebComponents.waitFor = window.WebComponents.waitFor || function(waitFn) {\n    if (!waitFn) {\n      return;\n    }\n    whenLoadedFns.push(waitFn);\n    if (polyfillsLoaded) {\n      runWhenLoadedFns();\n    }\n  };\n  window.WebComponents._batchCustomElements = batchCustomElements;\n\n  var name = 'webcomponents-loader.js';\n  // Feature detect which polyfill needs to be imported.\n  var polyfills = [];\n  if (!('attachShadow' in Element.prototype && 'getRootNode' in Element.prototype) ||\n    (window.ShadyDOM && window.ShadyDOM.force)) {\n    polyfills.push('sd');\n  }\n  if (!window.customElements || window.customElements.forcePolyfill) {\n    polyfills.push('ce');\n  }\n\n  var needsTemplate = (function() {\n    // no real <template> because no `content` property (IE and older browsers)\n    var t = document.createElement('template');\n    if (!('content' in t)) {\n      return true;\n    }\n    // broken doc fragment (older Edge)\n    if (!(t.content.cloneNode() instanceof DocumentFragment)) {\n      return true;\n    }\n    // broken <template> cloning (Edge up to at least version 17)\n    var t2 = document.createElement('template');\n    t2.content.appendChild(document.createElement('div'));\n    t.content.appendChild(t2);\n    var clone = t.cloneNode(true);\n    return (clone.content.childNodes.length === 0 ||\n        clone.content.firstChild.content.childNodes.length === 0);\n  })();\n\n  // NOTE: any browser that does not have template or ES6 features\n  // must load the full suite of polyfills.\n  if (!window.Promise || !Array.from || !window.URL || !window.Symbol || needsTemplate) {\n    polyfills = ['sd-ce-pf'];\n  }\n\n  if (polyfills.length) {\n    var url;\n    var polyfillFile = 'bundles/webcomponents-' + polyfills.join('-') + '.js';\n\n    // Load it from the right place.\n    if (window.WebComponents.root) {\n      url = window.WebComponents.root + polyfillFile;\n    } else {\n      var script = document.querySelector('script[src*=\"' + name +'\"]');\n      // Load it from the right place.\n      url = script.src.replace(name, polyfillFile);\n    }\n\n    var newScript = document.createElement('script');\n    newScript.src = url;\n    // if readyState is 'loading', this script is synchronous\n    if (document.readyState === 'loading') {\n      // make sure custom elements are batched whenever parser gets to the injected script\n      newScript.setAttribute('onload', 'window.WebComponents._batchCustomElements()');\n      document.write(newScript.outerHTML);\n      document.addEventListener('DOMContentLoaded', ready);\n    } else {\n      newScript.addEventListener('load', function () {\n        asyncReady();\n      });\n      newScript.addEventListener('error', function () {\n        throw new Error('Could not load polyfill bundle' + url);\n      });\n      document.head.appendChild(newScript);\n    }\n  } else {\n    // if readyState is 'complete', script is loaded imperatively on a spec-compliant browser, so just fire WCR\n    if (document.readyState === 'complete') {\n      polyfillsLoaded = true;\n      fireEvent();\n    } else {\n      // this script may come between DCL and load, so listen for both, and cancel load listener if DCL fires\n      window.addEventListener('load', ready);\n      window.addEventListener('DOMContentLoaded', function() {\n        window.removeEventListener('load', ready);\n        ready();\n      })\n    }\n  }\n})();\n"]}